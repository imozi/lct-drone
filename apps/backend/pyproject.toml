[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "drone-flights-analysis"
version = "1.0.0"
description = "Система анализа полетов БАС для регионов РФ"
authors = ["Developer <developer@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.13"
django = "^5.1.7"
django-environ = "^0.12.0"
djangorestframework = "^3.15.2"
djangorestframework-gis = "^1.0"
django-cors-headers = "^4.7.0"
django-filter = "^25.1"
gunicorn = "^23.0.0"
django-extensions = "^3.2.3"
psycopg2-binary = "^2.9.10"
pillow = "^11.2.1"
django-tinymce = "^4.1.0"
pandas = "^2.3.0"
openpyxl = "^3.1.5"
xlrd = "^2.0.2"
redis = "^5.1.0"
celery = "^5.4.0"
django-redis = "^5.4.0"
drf-spectacular = "^0.28.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.2"
mypy = "^1.15.0"
django-stubs = "^5.1.0"
django-debug-toolbar = "^5.1.0"
pre-commit = "^3.0.0"

[tool.ruff]
line-length = 100
target-version = "py313"
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pycaches__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "migrations",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "SIM",  # flake8-simplify
    "DJ",   # flake8-django
]
ignore = [
    "S101",  # assert used
    "S104",  # hardcoded bind all interfaces
    "W291",
    "E501"
]

[tool.ruff.lint.per-file-ignores]
"**/tests/**/*.py" = ["D", "E501", "S"]
"**/migrations/**/*.py" = ["D", "E501", "RUF012"]
"**/settings/**/*.py" = ["F405", "F403"]
"manage.py" = ["T201"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
mypy_path = "src/"
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
module = "*.migrations.*"
ignore_errors = true